{"version":3,"sources":["components/Card/Card.module.css","components/ComplexityComp/ComplexityComp.module.css","components/PlayArea/PlayArea.module.css","components/Timer/Timer.module.css","components/Stats/Stats.module.css","components/Card/index.jsx","assets/images/heart.svg","assets/images/spade.svg","assets/images/diamond.svg","assets/images/club.svg","utils/axios/index.js","utils/methods/index.js","components/Timer/index.jsx","components/PlayArea/index.jsx","components/ComplexityComp/index.jsx","components/Stats/index.jsx","App.jsx","index.js"],"names":["module","exports","IMAGES","heart","spades","diamond","club","Card","index","handleCardOpen","file_id","open","matched","face","cardRef","useRef","ref","onClick","className","classes","card","masked","src","suite","toLowerCase","alt","rank","axiosInstance","axios","create","baseURL","process","interceptors","response","use","data","error","Promise","reject","toHHMMSS","val","sec_num","parseInt","hours","Math","floor","minutes","seconds","Timer","errorCount","isTimerStarted","startTimer","useState","countdown","setCountdown","timerId","useEffect","current","setInterval","count","clearInterval","timerContainer","PlayArea","numCards","onGameOver","currentTime","setIstimerStarted","Array","fill","cardsArray","setCardsArray","setErrorCount","Date","getTime","filter","el","length","cardsList","selectedItem","Object","keys","post","then","res","catch","console","reduce","a","e","i","push","first","second","firstCard","secondCard","setTimeout","state","map","item","inx","timeElapsed","playArea","ComplexityComponent","onComplexityChange","mainContainer","buttonContainer","type","Stats","statsContainer","withRouter","history","gameConfig","setGameConfig","stats","setStats","path","ComplexityComp","complexity","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac8ca0a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1eE8R\",\"matched\":\"Card_matched__3MMvc\",\"masked\":\"Card_masked__1qIZo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"ComplexityComp_mainContainer__1rS0U\",\"buttonContainer\":\"ComplexityComp_buttonContainer__2V1Za\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playArea\":\"PlayArea_playArea__3POi7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timerContainer\":\"Timer_timerContainer__1TXqM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statsContainer\":\"Stats_statsContainer__10Lpp\"};","import React, { useRef, useState } from \"react\";\nimport classes from \"./Card.module.css\";\nimport heart from \"../../assets/images/heart.svg\";\nimport spades from \"../../assets/images/spade.svg\";\nimport diamond from \"../../assets/images/diamond.svg\";\nimport club from \"../../assets/images/club.svg\";\n\nconst IMAGES = {\n  heart,\n  spades,\n  diamond,\n  club,\n};\n\nfunction Card({ index, file_id, handleCardOpen, open, matched, face }) {\n  const cardRef = useRef();\n\n  return (\n    <div\n      ref={cardRef}\n      onClick={() => {\n        if (matched) return false;\n        handleCardOpen(index);\n      }}\n      className={`${classes.card} ${\n        matched ? classes.matched : open ? \"\" : classes.masked\n      }`}\n    >\n      <img src={IMAGES[face.suite?.toLowerCase()]} alt=\"heart\" />\n      <span>{face.rank}</span>\n    </div>\n  );\n}\n\nexport default Card;\n","export default __webpack_public_path__ + \"static/media/heart.c9b12bb5.svg\";","export default __webpack_public_path__ + \"static/media/spade.381a4f13.svg\";","export default __webpack_public_path__ + \"static/media/diamond.53998217.svg\";","export default __webpack_public_path__ + \"static/media/club.2bc17834.svg\";","import axios from \"axios\";\n\nconst axiosInstance = axios.create({\n  baseURL: process.env.REACT_APP_API_BASE || \"http://localhost:9001/api\",\n});\n\naxiosInstance.interceptors.response.use(\n  ({ data }) => data,\n  (error) => Promise.reject(error)\n);\n\nexport default axiosInstance;\n","export function toHHMMSS(val) {\n  var sec_num = parseInt(val, 10); // don't forget the second param\n  var hours = Math.floor(sec_num / 3600);\n  var minutes = Math.floor((sec_num - hours * 3600) / 60);\n  var seconds = sec_num - hours * 3600 - minutes * 60;\n\n  if (hours < 10) {\n    hours = \"0\" + hours;\n  }\n  if (minutes < 10) {\n    minutes = \"0\" + minutes;\n  }\n  if (seconds < 10) {\n    seconds = \"0\" + seconds;\n  }\n  return hours + \":\" + minutes + \":\" + seconds;\n}\n","import classes from \"./Timer.module.css\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { toHHMMSS } from \"../../utils/methods\";\n\nfunction Timer({ errorCount, startTimer, isTimerStarted }) {\n  const [countdown, setCountdown] = useState(0);\n  const timerId = useRef();\n\n  useEffect(() => {\n    if (isTimerStarted) {\n      timerId.current = setInterval(() => {\n        setCountdown((count) => count + 1);\n      }, 1000);\n    }\n    return () => {\n      clearInterval(timerId.current);\n    };\n  }, [isTimerStarted]);\n\n  return (\n    <div className={classes.timerContainer}>\n      <div>Time: {toHHMMSS(countdown)}</div>\n      <div>Errors: {errorCount}</div>\n    </div>\n  );\n}\n\nexport default Timer;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport Card from \"../Card\";\nimport classes from \"./PlayArea.module.css\";\nimport axios from \"../../utils/axios\";\nimport Timer from \"../Timer\";\n\nfunction PlayArea({ file_id, numCards, onGameOver }) {\n  const currentTime = useRef();\n  const [isTimerStarted, setIstimerStarted] = useState(false);\n\n  function findAllIndex(array) {\n    return array.reduce(function (a, e, i) {\n      if (e.open) a.push(i);\n      return a;\n    }, []);\n  }\n\n  const [cardsArray, setCardsArray] = useState(\n    Array(numCards).fill({ open: false, matched: false, face: {} })\n  );\n\n  const [errorCount, setErrorCount] = useState(0);\n\n  function handleCardOpen(index) {\n    if (!isTimerStarted) {\n      setIstimerStarted(true);\n      currentTime.current = new Date().getTime();\n    }\n    let openCount = cardsArray.filter((el) => el.open).length;\n    if (openCount > 1) return false;\n\n    let cardsList = [...cardsArray];\n    let selectedItem = { ...cardsList[index] };\n\n    if (Object.keys(selectedItem.face).length > 0) {\n      selectedItem.open = !selectedItem.open;\n      cardsList[index] = selectedItem;\n      setCardsArray(cardsList);\n      return;\n    }\n\n    axios\n      .post(\"/open-card-face\", {\n        file_id,\n        index,\n      })\n      .then((res) => {\n        selectedItem.face = res;\n        selectedItem.open = !selectedItem.open;\n        cardsList[index] = selectedItem;\n        setCardsArray(cardsList);\n      })\n      .catch(console.error);\n  }\n\n  useEffect(() => {\n    if (cardsArray.filter((el) => el.open).length === 2) {\n      const [first, second] = findAllIndex(cardsArray);\n      const { face: firstCard } = cardsArray[first];\n      const { face: secondCard } = cardsArray[second];\n\n      setTimeout(() => {\n        if (\n          firstCard.suite === secondCard.suite &&\n          firstCard.rank === secondCard.rank\n        ) {\n          setCardsArray((state) =>\n            state.map((item, inx) => ({\n              ...item,\n              open: false,\n              matched: item.matched ? true : inx === first || inx === second,\n            }))\n          );\n        } else {\n          setErrorCount((state) => state + 1);\n          setCardsArray((state) =>\n            state.map((item) => ({ ...item, open: false }))\n          );\n        }\n      }, 3000);\n    }\n  }, [cardsArray]);\n\n  useEffect(() => {\n    if (cardsArray.filter((el) => !el.matched).length === 0) {\n      // every card is matched, game over\n      axios\n        .post(\"/game-over\", {\n          file_id,\n        })\n        .then((res) => {\n          onGameOver({\n            errorCount,\n            timeElapsed: new Date().getTime() - currentTime.current,\n          });\n        })\n        .catch(console.error);\n    }\n  }, [cardsArray]);\n\n  return (\n    <>\n      <Timer\n        isTimerStarted={isTimerStarted}\n        startTimer={currentTime.current}\n        errorCount={errorCount}\n      />\n      <div className={classes.playArea}>\n        {cardsArray.map((card, inx) => (\n          <Card\n            key={inx}\n            index={inx}\n            handleCardOpen={handleCardOpen}\n            file_id={file_id}\n            {...card}\n          />\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default PlayArea;\n","import React from \"react\";\nimport classes from \"./ComplexityComp.module.css\";\n\nfunction ComplexityComponent({ onComplexityChange }) {\n  return (\n    <div className={classes.mainContainer}>\n      <h3>Please Select Game Difficulty</h3>\n\n      <div className={classes.buttonContainer}>\n        <button type=\"button\" onClick={() => onComplexityChange(\"easy\")}>\n          Easy\n        </button>\n        <button type=\"button\" onClick={() => onComplexityChange(\"medium\")}>\n          Medium\n        </button>\n        <button type=\"button\" onClick={() => onComplexityChange(\"hard\")}>\n          Hard\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default ComplexityComponent;\n","import classes from \"./Stats.module.css\";\nimport React from \"react\";\nimport { toHHMMSS } from \"../../utils/methods\";\n\nfunction Stats({ errorCount, timeElapsed }) {\n  return (\n    <div className={classes.statsContainer}>\n      <h2>GAME OVER</h2>\n      <h4>Error Count: {errorCount}</h4>\n      <h4>Time Elapsed: {toHHMMSS(parseInt(timeElapsed / 1000))}</h4>\n    </div>\n  );\n}\n\nexport default Stats;\n","import React, { useState } from \"react\";\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nimport \"./App.css\";\nimport PlayArea from \"./components/PlayArea\";\nimport ComplexityComp from \"./components/ComplexityComp\";\nimport Stats from \"./components/Stats\";\nimport axios from \"./utils/axios\";\n\nfunction App({ history }) {\n  const [gameConfig, setGameConfig] = useState(\"\");\n  const [stats, setStats] = useState({});\n\n  function handleComplexityChange(complexity) {\n    axios\n      .post(\"/generate-game\", { complexity })\n      .then((res) => {\n        setGameConfig(res);\n        history.push(\"/play\");\n      })\n      .catch(console.error);\n  }\n\n  function handleGameOver(data) {\n    setStats(data);\n    history.push(\"/game-over\");\n  }\n\n  return (\n    <Switch>\n      <Route path=\"/play\">\n        <PlayArea {...gameConfig} onGameOver={handleGameOver} />\n      </Route>\n      <Route path=\"/game-over\">\n        <Stats {...stats} />\n      </Route>\n      <Route path=\"/\">\n        <ComplexityComp onComplexityChange={handleComplexityChange} />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default withRouter(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}